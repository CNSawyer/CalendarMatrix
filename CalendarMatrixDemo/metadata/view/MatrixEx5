{
    "type": "Ext.container.Container",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "cls": [
            "matrix-ex5-cal"
        ],
        "designer|userAlias": "matrixex5",
        "designer|userClassName": "MatrixEx5",
        "height": null,
        "itemId": "matrixEx5",
        "layout": "border",
        "margin": 5,
        "maxHeight": null,
        "maxWidth": null,
        "style": "background-color: white;",
        "width": null
    },
    "name": "MatrixEx",
    "configAlternates": {
        "scrollable": "boolean",
        "style": "string"
    },
    "designerId": "2ffec39b-a60a-4994-bb8f-082988a54ac6",
    "viewControllerInstanceId": "8615eda4-0eb0-4fee-b5c0-923ba7e467e5",
    "viewModelInstanceId": "4235094c-8697-4bb6-80c7-fefb40a7ca9e",
    "cn": [
        {
            "type": "Ext.container.Container",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "height": null,
                "html": "Trivago style date range selector. Also demonstrates the following:<br>  - Customized month navigation arrows and utilizes renderTplOverride config to display weekday names to 3 characters.<br>  - Utilizes initRangeDts config to default startDate/endDate.  Custom styling of startDate and endDate relies on injected .startdate and .enddate CSS selectors<br>  - Utilizes customClsFn config to inject custom unique CSS selectors for Saturday vs. Sunday<br>  - Utilizes disableFn config to dynamically disable dates based on startDate vs. endDate selection mode.",
                "layout|region": "north",
                "style": "margin: 20px 0; font-size: 18px;"
            },
            "name": "MyContainer",
            "configAlternates": {
                "html": "string",
                "style": "string",
                "scrollable": "boolean"
            },
            "designerId": "45e43756-83fb-4632-bd7f-5d4e56e52d7b"
        },
        {
            "type": "Ext.container.Container",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "height": 350,
                "itemId": "slidingCalendar",
                "layout|region": "north",
                "reference": "slidingCalendar"
            },
            "name": "MyContainer2",
            "designerId": "95c71a86-a528-482c-bcac-8a58fa81edba",
            "cn": [
                {
                    "type": "Ext.container.Container",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "container|align": "stretch",
                        "height": "50px",
                        "layout": "hbox"
                    },
                    "name": "MyContainer1",
                    "designerId": "453af7cc-ee62-44df-a833-25aa3c3a6298",
                    "cn": [
                        {
                            "type": "Ext.container.Container",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "cls": [
                                    "check-in-btn2",
                                    "selected"
                                ],
                                "height": 40,
                                "itemId": "checkInBtn2",
                                "layout|flex": null,
                                "listeners": [
                                    "{",
                                    " render: function(panel) {",
                                    "   panel.el.on('click', function(e) {",
                                    "      var me = this.component.up('#matrixEx5');",
                                    "      me.getController().checkInBtnClick(this.component);",
                                    "   });",
                                    " }",
                                    "}"
                                ],
                                "minWidth": null,
                                "reference": "checkInBtn2",
                                "width": 156
                            },
                            "name": "MyContainer3",
                            "configAlternates": {
                                "listeners": "object"
                            },
                            "designerId": "b56d4075-4b9d-4862-9b40-c5eb406f3ace",
                            "customConfigs": [
                                {
                                    "group": "(Custom Properties)",
                                    "name": "listeners",
                                    "type": "string"
                                }
                            ],
                            "cn": [
                                {
                                    "type": "Ext.container.Container",
                                    "reference": {
                                        "name": "items",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "cls": [
                                            "check-in-btn2-label"
                                        ],
                                        "height": null,
                                        "html": "Check-in",
                                        "itemId": null,
                                        "padding": null
                                    },
                                    "name": "MyContainer4",
                                    "configAlternates": {
                                        "html": "string"
                                    },
                                    "designerId": "73cb42eb-8ee9-4952-8445-fb01f339746d"
                                },
                                {
                                    "type": "Ext.container.Container",
                                    "reference": {
                                        "name": "items",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "cls": [
                                            "check-in-btn2-date"
                                        ],
                                        "html": "date",
                                        "itemId": "checkInBtn2Date",
                                        "reference": "checkInBtn2Date"
                                    },
                                    "name": "MyContainer12",
                                    "configAlternates": {
                                        "html": "string"
                                    },
                                    "designerId": "56c2e1ff-b125-497a-ba90-961b6653800c"
                                }
                            ]
                        },
                        {
                            "type": "Ext.container.Container",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "cls": [
                                    "check-out-btn2"
                                ],
                                "height": 40,
                                "itemId": "checkOuttBtn2",
                                "layout|flex": null,
                                "listeners": [
                                    "{",
                                    " render: function(panel) {",
                                    "   panel.el.on('click', function(e) {",
                                    "      var me = this.component.up('#matrixEx5');",
                                    "      me.getController().checkOutBtnClick(this.component);",
                                    "   });",
                                    " }",
                                    "}"
                                ],
                                "reference": "checkOutBtn2",
                                "width": 156
                            },
                            "name": "MyContainer13",
                            "configAlternates": {
                                "listeners": "object"
                            },
                            "designerId": "01e7ba5c-a65c-412a-a22c-7e113978a6f2",
                            "customConfigs": [
                                {
                                    "group": "(Custom Properties)",
                                    "name": "listeners",
                                    "type": "string"
                                }
                            ],
                            "cn": [
                                {
                                    "type": "Ext.container.Container",
                                    "reference": {
                                        "name": "items",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "cls": [
                                            "check-in-btn2-label"
                                        ],
                                        "height": null,
                                        "html": "Check-out",
                                        "itemId": null
                                    },
                                    "name": "MyContainer4",
                                    "configAlternates": {
                                        "html": "string"
                                    },
                                    "designerId": "8053bcb2-0102-476d-b78e-7d361ac4c36c"
                                },
                                {
                                    "type": "Ext.container.Container",
                                    "reference": {
                                        "name": "items",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "cls": [
                                            "check-in-btn2-date"
                                        ],
                                        "html": "date",
                                        "itemId": "checkOutBtn2Date",
                                        "reference": "checkOutBtn2Date"
                                    },
                                    "name": "MyContainer12",
                                    "configAlternates": {
                                        "html": "string"
                                    },
                                    "designerId": "73c573e1-7125-47a5-ba9f-21fd8deaf3c0"
                                }
                            ]
                        },
                        {
                            "type": "Ext.button.Button",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|uiInterfaceName": "plain",
                                "height": 30,
                                "iconCls": "fa-icon-remove",
                                "itemId": "resetBtn",
                                "layout|flex": null,
                                "style": "padding: 0px 5px 5px 5px;",
                                "text": null,
                                "ui": "plain",
                                "width": 30
                            },
                            "name": "MyButton3",
                            "configAlternates": {
                                "style": "string",
                                "scrollable": "boolean"
                            },
                            "designerId": "03ce6979-e90d-43b4-82dd-63f15751506f",
                            "cn": [
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onResetBtnClick",
                                        "implHandler": [
                                            "var me = this,",
                                            "    view = me.getView(),",
                                            "    matrix = me.lookupReference('matrixEx5Cal');",
                                            "",
                                            "console.log('matrixEx5Cal (prior to reset): startDt='+matrix.rangeDt1+', endDt='+matrix.rangeDt2);",
                                            "",
                                            "matrix.rangeDate1= Ext.Date.clearTime(new Date(Date(Ext.Date.now())), true);",
                                            "matrix.rangeDt1 = Ext.Date.format(matrix.rangeDate1, \"Y-m-d\");",
                                            "matrix.rangeDate2 = Ext.Date.add(matrix.rangeDate1, Ext.Date.DAY, 1);",
                                            "matrix.rangeDt2 = Ext.Date.format(matrix.rangeDate2, \"Y-m-d\");      ",
                                            "",
                                            "me.updCheckInDate(matrix.rangeDate1);",
                                            "me.updCheckOutDate(matrix.rangeDate2);",
                                            "",
                                            "matrix.dispCalGrid();",
                                            ""
                                        ],
                                        "name": "click",
                                        "scope": "me"
                                    },
                                    "name": "onResetBtnClick",
                                    "designerId": "0b3c38dd-37f3-431f-99ce-78e97c5bfad9"
                                }
                            ]
                        },
                        {
                            "type": "Ext.container.Container",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "layout|flex": 1
                            },
                            "name": "MyContainer14",
                            "designerId": "647661b2-9f97-4b64-8ae4-dcaca199de60"
                        }
                    ]
                }
            ]
        },
        {
            "type": "Ext.container.Container",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "layout|region": "center"
            },
            "name": "MyContainer11",
            "designerId": "ec7c2290-c53f-44cc-9277-2530cb747001"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "initComponent",
                "implHandler": [
                    "var me = this;",
                    "",
                    "me.callParent(arguments);",
                    "",
                    "var slidingCalendar, cal, priorBtn, nextBtn, toolbar, renderTplOverride;",
                    "",
                    "renderTplOverride = [  // Overriding default renderTpl (refer to Ext.picker.Date) to include 3-chars in weekday names... see firstInitial() template method",
                    "    '<div id=\"{id}-innerEl\" data-ref=\"innerEl\">',",
                    "    '<div class=\"{baseCls}-header\">',",
                    "    '<div id=\"{id}-prevEl\" data-ref=\"prevEl\" class=\"{baseCls}-prev {baseCls}-arrow\" role=\"button\" title=\"{prevText}\"></div>',",
                    "    '<div id=\"{id}-middleBtnEl\" data-ref=\"middleBtnEl\" class=\"{baseCls}-month\" role=\"heading\">{%this.renderMonthBtn(values, out)%}</div>',",
                    "    '<div id=\"{id}-nextEl\" data-ref=\"nextEl\" class=\"{baseCls}-next {baseCls}-arrow\" role=\"button\" title=\"{nextText}\"></div>',",
                    "    '</div>',",
                    "    '<table role=\"grid\" id=\"{id}-eventEl\" data-ref=\"eventEl\" class=\"{baseCls}-inner\" {%',",
                    "    // If the DatePicker is focusable, make its eventEl tabbable.",
                    "    // Note that we're looking at the `focusable` property because",
                    "    // calling `isFocusable()` will always return false at that point",
                    "    // as the picker is not yet rendered.",
                    "    'if (values.$comp.focusable) {out.push(\"tabindex=\\\\\\\"0\\\\\\\"\");}',",
                    "    '%} cellspacing=\"0\">',",
                    "    '<thead><tr role=\"row\">',",
                    "    '<tpl for=\"dayNames\">',",
                    "    '<th role=\"columnheader\" class=\"{parent.baseCls}-column-header\" aria-label=\"{.}\">',",
                    "    '<div role=\"presentation\" class=\"{parent.baseCls}-column-header-inner\">{.:this.firstInitial}</div>',",
                    "    '</th>',",
                    "    '</tpl>',",
                    "    '</tr></thead>',",
                    "    '<tbody><tr role=\"row\">',",
                    "    '<tpl for=\"days\">',",
                    "    '{#:this.isEndOfWeek}',",
                    "    '<td role=\"gridcell\">',",
                    "    '<div hidefocus=\"on\" class=\"{parent.baseCls}-date\"></div>',",
                    "    '</td>',",
                    "    '</tpl>',",
                    "    '</tr></tbody>',",
                    "    '</table>',",
                    "    '<tpl if=\"showToday\">',",
                    "    '<div id=\"{id}-footerEl\" data-ref=\"footerEl\" role=\"presentation\" class=\"{baseCls}-footer\">{%this.renderTodayBtn(values, out)%}</div>',",
                    "    '</tpl>',",
                    "    '</div>',",
                    "    {",
                    "        firstInitial: function(value) {",
                    "            return value.substr(0, 3).toUpperCase();  // Overridden for this example to show 3 characters for day of week",
                    "        },",
                    "        isEndOfWeek: function(value) {",
                    "            // convert from 1 based index to 0 based",
                    "            // by decrementing value once.",
                    "            value--;",
                    "            var end = value % 7 === 0 && value !== 0;",
                    "            return end ? '</tr><tr role=\"row\">' : '';",
                    "        },",
                    "        renderTodayBtn: function(values, out) {",
                    "            Ext.DomHelper.generateMarkup(values.$comp.todayBtn.getRenderTree(), out);",
                    "        },",
                    "        renderMonthBtn: function(values, out) {",
                    "            Ext.DomHelper.generateMarkup(values.$comp.monthBtn.getRenderTree(), out);",
                    "        }",
                    "    }",
                    "];",
                    "",
                    "var today= Ext.Date.clearTime(new Date(Date(Ext.Date.now())), true);",
                    "var todayDt = Ext.Date.format(today, \"Y-m-d\");",
                    "var tomorrow = Ext.Date.add(today, Ext.Date.DAY, 1);",
                    "var tomorrowDt = Ext.Date.format(tomorrow, \"Y-m-d\");",
                    "",
                    "cal = Ext.create('Ext.ux.CalendarMatrix.CalendarMatrix', {",
                    "    numRows: 1,",
                    "    numCols: 2,",
                    "    matrixMode: 'RANGE',",
                    "    initRangeDts: [todayDt, tomorrowDt],",
                    "    rangeSelectMode: 'startdate',",
                    "    matrixDisabled: false,",
                    "    renderTplOverride: renderTplOverride,",
                    "    cls: 'matrix-cal',",
                    "    itemId: 'matrixEx5Cal',",
                    "    reference: 'matrixEx5Cal',",
                    "    customClsFn: function(cellDate){ // Special styling for weekend days",
                    "        var customCls = '';",
                    "        var weekIdx = parseInt(Ext.Date.format(cellDate, 'w'));",
                    "        if ([0,6].indexOf(weekIdx) !== -1) {",
                    "            customCls = 'weekend ' + (weekIdx===0 ? 'weekend0' : 'weekend6');",
                    "        }",
                    "        return customCls;",
                    "    },",
                    "    disableFn: function(cellDate, matrixCont){",
                    "        // When selecting enddates, disable dates prior to start date.  when selecting start dates, disable prior to today",
                    "        var today= Ext.Date.clearTime(new Date(Date(Ext.Date.now())), true);",
                    "        return (cellDate < (matrixCont.getRangeSelectMode()==='startdate' ? today : matrixCont.rangeDate1));",
                    "    }",
                    "",
                    "});",
                    "",
                    "var ctrl = me.getController();",
                    "cal.mon(cal, 'calendarselect', ctrl.handleSelect, ctrl);",
                    "",
                    "// Use Controller methods to update button text based on defaulted start/end dates",
                    "ctrl.updCheckInDate(today);",
                    "ctrl.updCheckOutDate(tomorrow);",
                    "",
                    "",
                    "toolbar = cal.down('#calGridToolBar');",
                    "cal.remove(toolbar, true);",
                    "",
                    "priorBtn = Ext.create('Ext.button.Button',{",
                    "    ui: 'plain',",
                    "    iconCls: 'cal-grid-prior-btn',",
                    "    text: '',",
                    "    style: 'z-index: 200; position: absolute;',",
                    "    x: 5,",
                    "    y: 3,",
                    "    itemId: 'priorCalGridMatrix',",
                    "    reference: 'priorCalGridMatrix',",
                    "    listeners: {",
                    "        click: 'onPriorCalGridMatrixClick'",
                    "    }",
                    "});",
                    "",
                    "cal.add(priorBtn);",
                    "",
                    "nextBtn = Ext.create('Ext.button.Button',{",
                    "    ui: 'plain',",
                    "    iconCls: 'cal-grid-next-btn',",
                    "    text: '',",
                    "    style: 'z-index: 200; position: absolute; ',",
                    "    x: 570,",
                    "    y: 3,",
                    "    itemId: 'nextCalGridMatrix',",
                    "    reference: 'nextCalGridMatrix',",
                    "    cls: 'cal-grid-next-btn',",
                    "    listeners: {",
                    "        click: 'onNextCalGridMatrixClick'",
                    "    }",
                    "});",
                    "",
                    "cal.add(nextBtn);",
                    "",
                    "slidingCalendar = me.down('#slidingCalendar');",
                    "slidingCalendar.add(cal);",
                    ""
                ]
            },
            "name": "initComponent",
            "designerId": "bfec3a48-5bd9-405d-952f-c85d21d053c2"
        }
    ]
}